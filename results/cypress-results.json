{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2021-07-27T16:02:49.350Z",
    "end": "2021-07-27T16:03:02.207Z",
    "duration": 10052,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c5b43b4d-69c7-4d5a-92a1-35139fff296a",
      "title": "",
      "fullFile": "cypress/integration/home.spec.ts",
      "file": "cypress/integration/home.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "118b047f-8d41-446e-a068-12c953dfb8a9",
          "title": "Ponyracer",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display title on home page",
              "fullTitle": "Ponyracer should display title on home page",
              "timedOut": null,
              "duration": 1072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('h1', 'Ponyracer');\ncy.contains('small', 'Always a pleasure to bet on ponies');\ncy.get('.btn-primary').contains('Login').should('have.attr', 'href', '/login');\ncy.get('.btn-primary').contains('Register').should('have.attr', 'href', '/register');",
              "err": {},
              "uuid": "03fa517e-75bb-4241-bfcc-99e5fde69205",
              "parentUUID": "118b047f-8d41-446e-a068-12c953dfb8a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a navbar",
              "fullTitle": "Ponyracer should display a navbar",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.get(navbarBrand).contains('PonyRacer').should('have.attr', 'href', '/');\ncy.get(navbarLink).contains('Races').should('have.attr', 'href', '/races');",
              "err": {},
              "uuid": "ba717bdd-d162-4aa8-9f31-33e5ef94a949",
              "parentUUID": "118b047f-8d41-446e-a068-12c953dfb8a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a navbar collapsed on small screen",
              "fullTitle": "Ponyracer should display a navbar collapsed on small screen",
              "timedOut": null,
              "duration": 947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.viewport('iphone-6+');\ncy.visit('/login');\ncy.get('input').first().type('cedric');\ncy.get('input[type=password]').type('password');\ncy.get('form > button').click();\ncy.wait('@authenticateUser');\ncy.contains(navbarBrand, 'PonyRacer');\ncy.get(navbarLink).should('not.be.visible');\n// toggle the navbar\ncy.get('.navbar-toggler').click();\ncy.get(navbarLink).should('be.visible');",
              "err": {},
              "uuid": "fdb6c09b-e8e5-4c7d-9d15-616508b86d35",
              "parentUUID": "118b047f-8d41-446e-a068-12c953dfb8a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display the logged in user in navbar",
              "fullTitle": "Ponyracer should display the logged in user in navbar",
              "timedOut": null,
              "duration": 734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/login');\ncy.get('input').first().type('cedric');\ncy.get('input[type=password]').type('password');\ncy.get('form > button').click();\ncy.wait('@authenticateUser');\ncy.location('pathname').should('eq', '/');\ncy.get(navbarLink).contains('Races').should('have.attr', 'href', '/races');\ncy.get('#current-user').should('contain', 'cedric').and('contain', '1000');",
              "err": {},
              "uuid": "644b3dd4-5e97-4cda-ad74-8e4f3b88fdfd",
              "parentUUID": "118b047f-8d41-446e-a068-12c953dfb8a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03fa517e-75bb-4241-bfcc-99e5fde69205",
            "ba717bdd-d162-4aa8-9f31-33e5ef94a949",
            "fdb6c09b-e8e5-4c7d-9d15-616508b86d35",
            "644b3dd4-5e97-4cda-ad74-8e4f3b88fdfd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2904,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d6a29574-a2bb-4bbc-949f-b99c4d2380a3",
      "title": "",
      "fullFile": "cypress/integration/login.spec.ts",
      "file": "cypress/integration/login.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "466127ee-bf57-4ff3-bb31-2b3b866ddd37",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a login page",
              "fullTitle": "Login should display a login page",
              "timedOut": null,
              "duration": 1864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/login');\ncy.get('button').should('be.visible').and('be.disabled');\nloginInput().type('c');\nloginInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Login is required');\nloginInput().type('ced');\nerrorMessage().should('not.exist');\npasswordInput().type('p');\npasswordInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Password is required');\npasswordInput().type('pa');\nerrorMessage().should('not.exist');\nsubmitButton().click();\ncy.wait('@authenticateUser');\ncy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "4f1cc9bc-4da8-4921-8b60-1da128b11f56",
              "parentUUID": "466127ee-bf57-4ff3-bb31-2b3b866ddd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an alert if login fails",
              "fullTitle": "Login should display an alert if login fails",
              "timedOut": null,
              "duration": 607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/login');\ncy.intercept('POST', 'api/users/authentication', {\n    statusCode: 404\n}).as('failedAuthenticateUser');\nloginInput().type('ced');\npasswordInput().type('pa');\nsubmitButton().click();\ncy.wait('@failedAuthenticateUser');\ncy.location('pathname').should('eq', '/login');\ncy.get('.alert-danger').should('contain', 'Nope, try again');",
              "err": {},
              "uuid": "ba7610eb-4fbf-46e6-8ec5-fba115486a30",
              "parentUUID": "466127ee-bf57-4ff3-bb31-2b3b866ddd37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f1cc9bc-4da8-4921-8b60-1da128b11f56",
            "ba7610eb-4fbf-46e6-8ec5-fba115486a30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "964fb816-9fed-4e55-b1ef-b35b2def0d40",
      "title": "",
      "fullFile": "cypress/integration/races.spec.ts",
      "file": "cypress/integration/races.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bc1ae49-3a61-4843-a88d-599adc686865",
          "title": "Races",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a race list",
              "fullTitle": "Races should display a race list",
              "timedOut": null,
              "duration": 946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/races');\ncy.wait('@getRaces');\ncy.get('h2').should('have.length', 2);\ncy.get('p').should('have.length', 2).and('contain', 'ago');",
              "err": {},
              "uuid": "6d5a1df6-1adc-4f7b-90fe-971c3614d95f",
              "parentUUID": "2bc1ae49-3a61-4843-a88d-599adc686865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display ponies",
              "fullTitle": "Races should display ponies",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/races');\ncy.wait('@getRaces');\ncy.get('figure').should('have.length', 10);\ncy.get('img').should('have.length', 10);\ncy.get('figcaption').should('have.length', 10);",
              "err": {},
              "uuid": "e553ce05-4f1b-46ac-97cc-5bf52028e63b",
              "parentUUID": "2bc1ae49-3a61-4843-a88d-599adc686865",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d5a1df6-1adc-4f7b-90fe-971c3614d95f",
            "e553ce05-4f1b-46ac-97cc-5bf52028e63b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "266d6969-f3d0-43b2-8d7d-f622b705114f",
      "title": "",
      "fullFile": "cypress/integration/register.spec.ts",
      "file": "cypress/integration/register.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd629ee4-d7ec-44a3-a04f-630eb632df93",
          "title": "Register",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a register page",
              "fullTitle": "Register should display a register page",
              "timedOut": null,
              "duration": 3506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/register');\nconst loginInput = () => cy.get('input').first();\nconst passwordInput = () => cy.get('input[type=password]').first();\nconst confirmInput = () => cy.get('input[type=password]').eq(1);\nconst birthYearInput = () => cy.get('input[type=number]');\nconst errorMessage = () => cy.get('.mb-3 div');\ncy.get('button').should('be.visible').and('be.disabled');\nloginInput().type('c');\nloginInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Login is required');\nloginInput().type('ced');\nerrorMessage().should('not.exist');\npasswordInput().type('p');\npasswordInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Password is required');\npasswordInput().type('pa');\nerrorMessage().should('not.exist');\nconfirmInput().type('p');\nconfirmInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Confirming password is required');\nconfirmInput().type('p');\ncy.get('form').should('be.visible').and('contain', 'Your password does not match');\nconfirmInput().type('a');\nerrorMessage().should('not.exist');\nbirthYearInput().type('1');\nbirthYearInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Birth year is required');\nbirthYearInput().type(`${new Date().getFullYear() + 1}`);\nerrorMessage().should('be.visible').and('contain', 'This is not a valid year');\nbirthYearInput().clear();\nbirthYearInput().type('1986');\nerrorMessage().should('not.exist');\ncy.get('form > button').click();\ncy.wait('@registerUser');\ncy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "47e0675d-2949-4ad7-9a33-fb5a91f743b6",
              "parentUUID": "bd629ee4-d7ec-44a3-a04f-630eb632df93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47e0675d-2949-4ad7-9a33-fb5a91f743b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3506,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}