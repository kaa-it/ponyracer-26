{
  "stats": {
    "suites": 5,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-07-28T10:18:51.900Z",
    "end": "2021-07-28T10:19:06.477Z",
    "duration": 11003,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e09ba0af-9519-48c3-9f37-2ab7ce5b1738",
      "title": "",
      "fullFile": "cypress/integration/bet.spec.ts",
      "file": "cypress/integration/bet.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2874f93-ce68-43c4-9b93-8037a4660eb1",
          "title": "Bet",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should bet on ponies and cancel",
              "fullTitle": "Bet should bet on ponies and cancel",
              "timedOut": null,
              "duration": 2468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/races');\ncy.wait('@getRaces');\n// go to bet page for the first race\ncy.get('.btn-primary').first().click();\ncy.wait('@getRace').its('request.headers').should('have.property', 'authorization', `Bearer ${user.token}`);\ncy.location('pathname').should('eq', '/races/12');\n// race detail should be displayed\ncy.get('h1').should('contain', 'Paris');\ncy.get('p').should('contain', 'ago');\ncy.get('img').should('have.length', 5);\n// no pony is selected\ncy.get('.selected').should('have.length', 0);\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@betRace').its('request.body').should('contain', { ponyId: 1 });\n// a pony is now selected\ncy.get('.selected').should('have.length', 1);\n// bet on the second one\ncy.intercept('POST', 'api/races/12/bets', Object.assign(Object.assign({}, race), { betPonyId: 2 })).as('secondBetRace');\ncy.get('img').eq(1).click();\ncy.wait('@secondBetRace').its('request.body').should('contain', { ponyId: 2 });\n// a pony is still selected\ncy.get('.selected').should('have.length', 1);\n// cancel fails\ncy.intercept('DELETE', 'api/races/12/bets', {\n    statusCode: 404\n}).as('failedCancelBetRace');\n// cancel bet on second pony\ncy.get('img').eq(1).click();\ncy.wait('@failedCancelBetRace');\n// alert should be displayed\ncy.get('.alert').should('contain', 'The race is already started or finished');\n// close alert\ncy.get('.alert button').click();\ncy.get('.alert').should('not.exist');\n// bet fails\ncy.intercept('POST', 'api/races/12/bets', {\n    statusCode: 404\n}).as('failedBetRace');\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@failedBetRace');\n// alert should be displayed\ncy.get('.alert').should('contain', 'The race is already started or finished');\n// close alert\ncy.get('.alert button').click();\ncy.get('.alert').should('not.exist');\ncy.intercept('DELETE', 'api/races/12/bets', {}).as('cancelBetRace');\n// cancel bet\ncy.get('img').eq(1).click();\ncy.wait('@cancelBetRace');\n// no pony is selected anymore\ncy.get('.selected').should('have.length', 0);",
              "err": {},
              "uuid": "09a6776e-a076-4dbc-b755-bf36c43c13eb",
              "parentUUID": "c2874f93-ce68-43c4-9b93-8037a4660eb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09a6776e-a076-4dbc-b755-bf36c43c13eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2468,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1d5c9b3f-152e-4d22-a54a-b43861f1dad1",
      "title": "",
      "fullFile": "cypress/integration/home.spec.ts",
      "file": "cypress/integration/home.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67ef1477-79e1-47b1-9d9b-8be3e45fd335",
          "title": "Ponyracer",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display title on home page",
              "fullTitle": "Ponyracer should display title on home page",
              "timedOut": null,
              "duration": 947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('h1', 'Ponyracer');\ncy.contains('small', 'Always a pleasure to bet on ponies');\ncy.get('.btn-primary').contains('Login').should('have.attr', 'href', '/login');\ncy.get('.btn-primary').contains('Register').should('have.attr', 'href', '/register');",
              "err": {},
              "uuid": "32c750ce-04ec-484c-85fd-9ba90cdac012",
              "parentUUID": "67ef1477-79e1-47b1-9d9b-8be3e45fd335",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a navbar",
              "fullTitle": "Ponyracer should display a navbar",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.get(navbarBrand).contains('PonyRacer').should('have.attr', 'href', '/');\ncy.get(navbarLink).should('not.exist');",
              "err": {},
              "uuid": "103449dc-770c-4d27-9238-a7dba9bb2f64",
              "parentUUID": "67ef1477-79e1-47b1-9d9b-8be3e45fd335",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display a navbar collapsed on small screen",
              "fullTitle": "Ponyracer should display a navbar collapsed on small screen",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.viewport('iphone-6+');\ncy.visit('/');\ncy.contains(navbarBrand, 'PonyRacer');\ncy.get(navbarLink).should('not.be.visible');\n// toggle the navbar\ncy.get('.navbar-toggler').click();\ncy.get(navbarLink).should('exist');",
              "err": {},
              "uuid": "ca53584c-db02-4a82-8058-ac325139d092",
              "parentUUID": "67ef1477-79e1-47b1-9d9b-8be3e45fd335",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should log out the user",
              "fullTitle": "Ponyracer should log out the user",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/races');\ncy.wait('@getRaces').its('request.headers').should('have.property', 'authorization', `Bearer ${user.token}`);\n// user stored should be displayed\ncy.get('#current-user').should('contain', 'cedric').and('contain', '1000');\n// logout\ncy.get('span.fa.fa-power-off').click();\n// should be redirected to home page\ncy.location('pathname')\n    .should('eq', '/')\n    // and localStorage should be clean\n    .and(() => expect(localStorage.getItem('rememberMe')).to.eq(null));\ncy.get(navbarLink).should('not.exist');\n// user is not displayed in navbar\ncy.get('#current-user').should('not.exist');\n// and home page offers the login link\ncy.get('.btn-primary').contains('Login').should('have.attr', 'href', '/login');",
              "err": {},
              "uuid": "2f84289a-3fa4-49ec-9c35-9fd79949e930",
              "parentUUID": "67ef1477-79e1-47b1-9d9b-8be3e45fd335",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32c750ce-04ec-484c-85fd-9ba90cdac012",
            "103449dc-770c-4d27-9238-a7dba9bb2f64",
            "ca53584c-db02-4a82-8058-ac325139d092",
            "2f84289a-3fa4-49ec-9c35-9fd79949e930"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1586,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ddb945be-6168-4dab-a08c-65a49941f1e3",
      "title": "",
      "fullFile": "cypress/integration/login.spec.ts",
      "file": "cypress/integration/login.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dcf76c69-51fa-40e2-83ea-634439af3dfe",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a login page",
              "fullTitle": "Login should display a login page",
              "timedOut": null,
              "duration": 1861,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/login');\ncy.get('button').should('be.visible').and('be.disabled');\nloginInput().type('c');\nloginInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Login is required');\nloginInput().type('ced');\nerrorMessage().should('not.exist');\npasswordInput().type('p');\npasswordInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Password is required');\npasswordInput().type('pa');\nerrorMessage().should('not.exist');\nsubmitButton().click();\ncy.wait('@authenticateUser');\ncy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "eb513d7a-6c20-4867-a907-e23f5f6671f7",
              "parentUUID": "dcf76c69-51fa-40e2-83ea-634439af3dfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an alert if login fails",
              "fullTitle": "Login should display an alert if login fails",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/login');\ncy.intercept('POST', 'api/users/authentication', {\n    statusCode: 404\n}).as('failedAuthenticateUser');\nloginInput().type('ced');\npasswordInput().type('pa');\nsubmitButton().click();\ncy.wait('@failedAuthenticateUser');\ncy.location('pathname').should('eq', '/login');\ncy.get('.alert-danger').should('contain', 'Nope, try again');",
              "err": {},
              "uuid": "9e39f210-e390-45e7-bcdd-b5cc9b085817",
              "parentUUID": "dcf76c69-51fa-40e2-83ea-634439af3dfe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb513d7a-6c20-4867-a907-e23f5f6671f7",
            "9e39f210-e390-45e7-bcdd-b5cc9b085817"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2531,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5892b125-fc8b-4769-9694-1bbf8c07fcfc",
      "title": "",
      "fullFile": "cypress/integration/races.spec.ts",
      "file": "cypress/integration/races.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a0da761a-1ad3-4a3c-ad0b-00be1d844f4c",
          "title": "Races",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a race list",
              "fullTitle": "Races should display a race list",
              "timedOut": null,
              "duration": 925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/races');\ncy.wait('@getRaces');\ncy.get('h2').should('have.length', 2);\ncy.get('p').should('have.length', 2).and('contain', 'ago');",
              "err": {},
              "uuid": "62ccfd96-69b3-46af-b821-e795a86f9b72",
              "parentUUID": "a0da761a-1ad3-4a3c-ad0b-00be1d844f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display ponies",
              "fullTitle": "Races should display ponies",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/races');\ncy.wait('@getRaces');\ncy.get('figure').should('have.length', 10);\ncy.get('img').should('have.length', 10);\ncy.get('figcaption').should('have.length', 10);",
              "err": {},
              "uuid": "86907382-c79f-43a2-98ae-d9dade0b4d02",
              "parentUUID": "a0da761a-1ad3-4a3c-ad0b-00be1d844f4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62ccfd96-69b3-46af-b821-e795a86f9b72",
            "86907382-c79f-43a2-98ae-d9dade0b4d02"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c853136a-b48b-4962-9223-ff9eb6104f43",
      "title": "",
      "fullFile": "cypress/integration/register.spec.ts",
      "file": "cypress/integration/register.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c35155aa-8b44-44e5-960e-8b24c9782294",
          "title": "Register",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display a register page",
              "fullTitle": "Register should display a register page",
              "timedOut": null,
              "duration": 3271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/register');\nconst loginInput = () => cy.get('input').first();\nconst passwordInput = () => cy.get('input[type=password]').first();\nconst confirmInput = () => cy.get('input[type=password]').eq(1);\nconst birthYearInput = () => cy.get('input[type=number]');\nconst errorMessage = () => cy.get('.mb-3 div');\ncy.get('button').should('be.visible').and('be.disabled');\nloginInput().type('c');\nloginInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Login is required');\nloginInput().type('ced');\nerrorMessage().should('not.exist');\npasswordInput().type('p');\npasswordInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Password is required');\npasswordInput().type('pa');\nerrorMessage().should('not.exist');\nconfirmInput().type('p');\nconfirmInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Confirming password is required');\nconfirmInput().type('p');\ncy.get('form').should('be.visible').and('contain', 'Your password does not match');\nconfirmInput().type('a');\nerrorMessage().should('not.exist');\nbirthYearInput().type('1');\nbirthYearInput().clear();\nerrorMessage().should('be.visible').and('contain', 'Birth year is required');\nbirthYearInput().type(`${new Date().getFullYear() + 1}`);\nerrorMessage().should('be.visible').and('contain', 'This is not a valid year');\nbirthYearInput().clear();\nbirthYearInput().type('1986');\nerrorMessage().should('not.exist');\ncy.get('form > button').click();\ncy.wait('@registerUser');\ncy.location('pathname').should('eq', '/');",
              "err": {},
              "uuid": "0185b19e-f881-400a-a1e8-f43c1b5fdc48",
              "parentUUID": "c35155aa-8b44-44e5-960e-8b24c9782294",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0185b19e-f881-400a-a1e8-f43c1b5fdc48"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3271,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}